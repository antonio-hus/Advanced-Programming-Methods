ID = 1
Execution Stack = 
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v1
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v2
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
Ref(int) v3
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
int cnt
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v1, 2)
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(0, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v2, 3)
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(0, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
new(v3, 4)
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(0, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
newLatch(cnt, rH(v2))
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->0, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {}
====================>


ID = 1
Execution Stack = 
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
fork((wH(v1,rH(v1)*10);(print(rH(v1));(await(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))))))
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
wH(v1,rH(v1)*10)
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
wH(v1,rH(v1)*10)
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
wH(v1,rH(v1)*10)
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
wH(v1,rH(v1)*10)
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=2, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
print(rH(v1))
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 2
Execution Stack = 
await(cnt)
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->3}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 2
Execution Stack = 
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 2
Execution Stack = 
fork((wH(v2,rH(v2)*10);(print(rH(v2));(await(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 2
Execution Stack = 
(EMPTY)
Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
wH(v2,rH(v2)*10)
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
wH(v2,rH(v2)*10)
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
wH(v2,rH(v2)*10)
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
wH(v2,rH(v2)*10)
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=3, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
print(rH(v2))
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 3
Execution Stack = 
await(cnt)
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->2}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 3
Execution Stack = 
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 3
Execution Stack = 
fork((wH(v3,rH(v3)*10);(print(rH(v3));await(cnt))))

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 3
Execution Stack = 
(EMPTY)
Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
wH(v3,rH(v3)*10)
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
wH(v3,rH(v3)*10)
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
wH(v3,rH(v3)*10)
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
wH(v3,rH(v3)*10)
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=4}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
print(rH(v3))
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 4
Execution Stack = 
await(cnt)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->1}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 4
Execution Stack = 
(EMPTY)
Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
await(cnt)
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100,1}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
print(100)

Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100,1}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


ID = 1
Execution Stack = 
(EMPTY)
Symbols Table = {cnt->1, v1->(1, int), v2->(2, int), v3->(3, int)}
Output List = {20,2,30,3,40,4,100,1,100}
File Table = {}
Heap = {1=20, 2=30, 3=40}
LatchTable = {1->0}
====================>


