Execution Stack = {(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a))))))))}
Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {Ref(int) v|(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a)))))))}
Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {Ref(int) v|(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a)))))))}
Symbols Table = {}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a)))))))}
Symbols Table = {v->(0, int)}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a)))))))}
Symbols Table = {v->(0, int)}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {new(v, 20)|(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a))))))}
Symbols Table = {v->(0, int)}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {new(v, 20)|(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a))))))}
Symbols Table = {v->(0, int)}
Output List = {}
File Table = {}
Heap = {}
====================>
Execution Stack = {(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a))))))}
Symbols Table = {v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(rH(rH(a))))))}
Symbols Table = {v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {Ref(Ref(int)) a|(new(a, v);(new(v, 30);print(rH(rH(a)))))}
Symbols Table = {v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {Ref(Ref(int)) a|(new(a, v);(new(v, 30);print(rH(rH(a)))))}
Symbols Table = {v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {(new(a, v);(new(v, 30);print(rH(rH(a)))))}
Symbols Table = {a->(0, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {(new(a, v);(new(v, 30);print(rH(rH(a)))))}
Symbols Table = {a->(0, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {new(a, v)|(new(v, 30);print(rH(rH(a))))}
Symbols Table = {a->(0, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {new(a, v)|(new(v, 30);print(rH(rH(a))))}
Symbols Table = {a->(0, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20}
====================>
Execution Stack = {(new(v, 30);print(rH(rH(a))))}
Symbols Table = {a->(2, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int)}
====================>
Execution Stack = {(new(v, 30);print(rH(rH(a))))}
Symbols Table = {a->(2, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int)}
====================>
Execution Stack = {new(v, 30)|print(rH(rH(a)))}
Symbols Table = {a->(2, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int)}
====================>
Execution Stack = {new(v, 30)|print(rH(rH(a)))}
Symbols Table = {a->(2, Ref(int)), v->(1, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int)}
====================>
Execution Stack = {print(rH(rH(a)))}
Symbols Table = {a->(2, Ref(int)), v->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int), 3=30}
====================>
Execution Stack = {print(rH(rH(a)))}
Symbols Table = {a->(2, Ref(int)), v->(3, int)}
Output List = {}
File Table = {}
Heap = {1=20, 2=(1, int), 3=30}
====================>
Execution Stack = {}
Symbols Table = {a->(2, Ref(int)), v->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=(1, int), 3=30}
====================>
Execution Stack = {}
Symbols Table = {a->(2, Ref(int)), v->(3, int)}
Output List = {20}
File Table = {}
Heap = {1=20, 2=(1, int), 3=30}
====================>
